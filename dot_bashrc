#
# ~/.bashrc
#

export EDITOR='lvim'
#export EDITOR="emacsclient -t -a 'emacs'"      # $EDITOR use Emacs in terminal

# If not running interactively, don't do anything
[[ $- != *i* ]] && return


shopt -s histappend
shopt -s checkwinsize
shopt -s autocd
shopt -s cdspell
shopt -s cmdhist
shopt -s dotglob
shopt -s expand_aliases
shopt -s direxpand

#ignore upper and lowercase when TAB completion
#bind "set completion-ignore-case on"

### ARCHIVE EXTRACTION
# usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.deb)       ar x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *.tar.zst)   unzstd $1    ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}


vnc ()
{
	ssh -CJ xklimes5@{aisa,$1}.fi.muni.cz -L 9999:localhost:9999
}



# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

export PS1="\[\e[0;36m\]\u\[\e[0;37m\]@\[\e[0;33m\]\H\[\e[0;32m\]\w\[\e[0;37m\]$ \[\e[0m\]"


if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi
[ -f "/home/klimi/.ghcup/env" ] && source "/home/klimi/.ghcup/env" # ghcup-env


# Use Alt+H for man
run-help() { help "$READLINE_LINE" 2>/dev/null || man "$READLINE_LINE"; }
bind -m vi-insert -x '"\eh": run-help'
bind -m emacs -x     '"\eh": run-help'

source $HOME/.bash_aliases
# command not found !requires pkgfile!
source /usr/share/doc/pkgfile/command-not-found.bash
export HISTCONTROL=ignoreboth:erasedups
source <(kitty + complete setup bash)
countdown () { for (( rem=$(($1 * 60)); $rem ; rem=rem-1 )); do echo -en "\rRemaining $rem sec."; sleep 1; done; echo; }
source ~/.config/bash/cpv.sh

export QSYS_ROOTDIR="/home/klimi/.cache/yay/quartus-free/pkg/quartus-free-quartus/opt/intelFPGA/21.1/quartus/sopc_builder/bin"


# BEGIN_KITTY_SHELL_INTEGRATION
if test -n "$KITTY_INSTALLATION_DIR" -a -e "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; then source "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; fi
# END_KITTY_SHELL_INTEGRATION
